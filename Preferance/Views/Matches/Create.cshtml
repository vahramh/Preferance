@model Preferance.Models.Match

@{
    ViewData["Title"] = "Create";
}

<h1>Select Players</h1>

<form asp-action="MatchStart">
    <input asp-for="Id" value="@Model.Id" hidden />
    <input id="txtCanStart" value="" hidden />
    <div id="divPlayerSelect">
        <select class="custom-select badge-pill badge-light" id="Player1" onchange="populateNextPlayer(1)">
            <option value="0">Please Select...</option>
            @foreach (var Player in Model.AllPlayers)
            {
                {
                    <option value="@Player.Id">@Player.Name</option>
                }
            }
        </select>

        <div id="divPlayer2">
            <select class="custom-select badge-pill badge-light" id="Player2" onchange="populateNextPlayer(2)">
                <option value="0">Please Select...</option>
            </select>
        </div>

        <div id="divPlayer3">
            <select class="custom-select badge-pill badge-light" id="Player3" onchange="populateNextPlayer(3)">
                <option value="0">Please Select...</option>
            </select>
        </div>

        <div id="divPlayer4">
            <select class="custom-select badge-pill badge-light" id="Player4" onchange="populateNextPlayer(4)">
                <option value="0">Please Select...</option>
            </select>
        </div>

    </div>

    <br />

    <div>
        <input type="button" id ="btnRandomise" class="btn-block badge-pill badge-info" value="Randomise" onclick="randomise()" disabled="disabled" />
        <input type="submit" id="btnStart" class="btn-block badge-pill badge-light" disabled="disabled" />
    </div>

    <div id="Board" class="boardcontainer">
        <img src="~/images/board.jpg" style="width:100%;height:auto" />
        <div class="player1">
            <input id="Player1Id" asp-for="Player1.Id" value="@Model.Player1.Id" hidden />
            <input id="Player1Name" class="bg-transparent border-0 text-center" readonly />
        </div>
        <div class="player2">
            <input id="Player2Id" asp-for="Player2.Id" value="@Model.Player2.Id" class="bg-transparent border-0 text-center" hidden />
            <input id="Player2Name" class="bg-transparent border-0 text-center" readonly />
        </div>
        <div class="player3">
            <input id="Player3Id" asp-for="Player3.Id" value="@Model.Player3.Id" class="bg-transparent border-0 text-center" hidden />
            <input id="Player3Name" class="bg-transparent border-0 text-center" readonly />
        </div>
        <div class="player4">
            <input id="Player4Id" asp-for="Player4.Id" value="@Model.Player4.Id" class="bg-transparent border-0 text-center" hidden />
            <input id="Player4Name" class="bg-transparent border-0 text-center" readonly />
        </div>
    </div>
</form>
<script>
    function populateNextPlayer(player) {
        var count = 0;
        var curindex;
        var intindex;
        var intadd = true;
        var allplayers = @Html.Raw(Json.Serialize(Model.AllPlayers));
        var intselect;
        var prevSelect;
        var intdiv;

        document.getElementById("Player".concat((player).toString()).concat("Name")).value = document.getElementById("Player".concat((player).toString())).options[document.getElementById("Player".concat((player).toString())).selectedIndex].text;;
        document.getElementById("Player".concat((player).toString()).concat("Id")).value = document.getElementById("Player".concat((player).toString())).options[document.getElementById("Player".concat((player).toString())).selectedIndex].value;;

        if (player == 4) {
            if (document.getElementById("Player".concat((player).toString())).selectedIndex > 0) {
                document.getElementById("txtCanStart").value = "True";
                document.getElementById("btnStart").classList.remove("badge-light");
                document.getElementById("btnStart").classList.add("badge-info");
                document.getElementById("btnStart").disabled = false;
                document.getElementById("btnRandomise").classList.remove("badge-light");
                document.getElementById("btnRandomise").classList.add("badge-info");
                document.getElementById("btnRandomise").disabled = false;
            }
            else {
                document.getElementById("txtCanStart").value = "";
                document.getElementById("btnStart").classList.add("badge-light");
                document.getElementById("btnStart").disabled = true;
                document.getElementById("btnRandomise").classList.add("badge-light");
                document.getElementById("btnRandomise").disabled = true;
            }
            return;
        }

        document.getElementById("txtCanStart").value = "";
        document.getElementById("btnStart").classList.add("badge-light");
        document.getElementById("btnStart").disabled = true;
        document.getElementById("btnRandomise").classList.add("badge-light");
        document.getElementById("btnRandomise").disabled = true;
        for (curindex = player + 1; curindex < 5; ++curindex) {
            intselect = document.getElementById("Player".concat((curindex).toString()));
            intdiv = document.getElementById("divPlayer".concat((curindex).toString()));
            intselect.options.length = 0;
        }

        var nextSelect = document.getElementById("Player".concat((player + 1).toString()));
        var nextDiv = document.getElementById("divPlayer".concat((player + 1).toString()));
        var curSelect = document.getElementById("Player".concat((player).toString()));
        if (curSelect.selectedIndex == 0) {
            return;
        }
        nextSelect.options.length = 0;

        var option = document.createElement("option");
        option.value = 0;
        option.text = "Please Select...";
        nextSelect.add(option);

        for (curindex = 0; curindex < @Model.AllPlayers.Count(); ++curindex) {
            intadd = true;
            for (intindex = 1; intindex < player + 1; ++intindex) {
                intselect = document.getElementById("Player".concat((intindex).toString()));
                if ((allplayers[curindex].id == intselect.options[intselect.selectedIndex].value)) {
                    intadd = false;
                }
            }

            if (intadd) {
                count++;
                var option = document.createElement("option");
                option.value = allplayers[curindex].id;
                option.text = allplayers[curindex].name;
                nextSelect.add(option);
            }
        }
    }

    function randomise() {
        if (document.getElementById("txtCanStart").value == "") {
            alert("Field is not configured");
            return
        }
        var a = ["1", "2", "3", "4"]
        var j, x, i;
        for (i = 3; i > 0; i--) {
            j = Math.floor(Math.random() * (i + 1));
            x = a[i];
            a[i] = a[j];
            a[j] = x;
        }

        for (i = 0; i < 4; i++) {
            document.getElementById("Player".concat((i + 1).toString()).concat("Name")).value = document.getElementById("Player".concat(a[i])).options[document.getElementById("Player".concat(a[i])).selectedIndex].text;
            document.getElementById("Player".concat((i + 1).toString()).concat("Id")).value = document.getElementById("Player".concat(a[i])).options[document.getElementById("Player".concat(a[i])).selectedIndex].value;
        }
    }

    function startclicked() {
        if (document.getElementById("txtCanStart").value == "") {
            alert("Field is not configured");
            return
        }
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
